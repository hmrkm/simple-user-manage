openapi: 3.1.0
info:
  title: simple-user-manage
  version: '1.0'
  contact:
    name: dummy
  description: シンプルなユーザー管理システム
servers:
  - url: 'http://localhost:80'
paths:
  /v1/users:
    get:
      summary: ユーザーリスト取得
      tags:
        - adapter
      responses:
        '200':
          $ref: '#/components/responses/ResponseGetUsers'
        '401':
          description: Unauthorized
      operationId: get-v1-users
      description: ユーザーのリストを取得
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/auth_token'
    parameters: []
    post:
      summary: ユーザー新規作成
      operationId: post-v1-users
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: ユーザーを新規作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPostUsers'
      parameters:
        - $ref: '#/components/parameters/auth_token'
  '/v1/users/{userId}':
    get:
      summary: ユーザー詳細取得
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/ResponseGetUser'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: 'get-v1-users-:userId'
      description: ユーザーの詳細情報を取得
      parameters:
        - $ref: '#/components/parameters/auth_token'
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
        description: ユーザーID
    put:
      summary: ユーザー詳細更新
      operationId: put-v1-users-userId
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: ユーザー詳細を更新する
      parameters:
        - $ref: '#/components/parameters/auth_token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutUsers'
    delete:
      summary: ユーザー削除
      operationId: delete-v1-users-userId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      description: ユーザーを削除
      parameters:
        - $ref: '#/components/parameters/auth_token'
components:
  schemas:
    RequestPostUsers:
      title: RequestPostUsers
      type: object
      description: ユーザー新規作成リクエスト
      properties:
        email:
          type: string
          description: メールアドレス
        password:
          type: string
          description: パスワード
        password_conf:
          type: string
          description: 確認用パスワード
      required:
        - email
        - password
        - password_conf
    RequestPutUsers:
      title: RequestPutUsers
      type: object
      description: ユーザー詳細更新リクエスト
      properties:
        email:
          type: string
          description: メールアドレス
        password:
          type: string
          description: 更新後パスワード
        password_conf:
          type: string
          description: 確認用パスワード
      required:
        - email
  responses:
    ResponseGetUsers:
      description: ユーザーリスト取得の応答
      content:
        application/json:
          schema:
            type: object
            description: ユーザーリスト
            properties:
              list:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: ユーザーID
                    email:
                      type: string
                      description: メールアドレス
                  required:
                    - id
                    - email
              page:
                type: object
                required:
                  - now
                  - last
                description: ページング情報
                properties:
                  now:
                    type: integer
                    description: 現在位置
                  last:
                    type: integer
                    description: 最終ページ
            required:
              - list
              - page
          examples: {}
    ResponseGetUser:
      description: ユーザー詳細習得応答
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: ユーザーID
              email:
                type: string
                description: メールアドレス
            required:
              - id
              - email
  parameters:
    token:
      name: token
      in: query
      required: true
      schema:
        type: string
      description: トークン
    page:
      name: page
      in: query
      schema:
        type: integer
      description: ページャー
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
      description: 件数
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: string
      description: ユーザーID
    auth_token:
      name: auth_token
      in: header
      required: false
      schema:
        type: string
      description: 認証トークン
tags:
  - name: adapter
